{
  "app": {
    "repoSelectorTitle": "Project Repository",
    "repoSelectPlaceholderLoading": "Loading...",
    "repoSelectPlaceholderSelect": "Select repository...",
    "repoSelectPlaceholderNoRepos": "No repositories found",
    "branchSelectPlaceholderLoading": "Loading...",
    "branchSelectPlaceholderSelect": "Select branch...",
    "branchSelectPlaceholderNoRepo": "Select repository first",
    "branchSelectPlaceholderNoBranches": "No branches found",
    "createFileButtonTitle": "Create new file",
    "settingsButtonTitle": "Settings",
    "rightPanelTitle": "Right Panel",
    "rightPanelDesc": "This panel takes the remaining space.",
    "loadingPat": "Loading PAT...",
    "loadingErrorTitle": "Loading Error",
    "operationErrorTitle": "Operation Failed",
    "fetchReposError": "Failed to fetch repositories: {{status}} {{message}}",
    "fetchBranchesError": "Failed to fetch branches: {{status}} {{message}}",
    "fetchFileContentError": "Failed to fetch file content ({{path}}): {{status}} {{message}}",
    "unknownEncodingError": "Unknown GitHub file encoding: {{encoding}}",
    "unknownError": "Unknown error",
    "invalidExcalidrawFormat": "Invalid Excalidraw file format (missing 'elements' or 'appState').",
    "parseExcalidrawError": "File \"{{filePath}}\" is not a valid Excalidraw JSON format: {{message}}",
    "loadingFile": "Loading file...",
    "selectFilePrompt": "Select an .excalidraw file from the tree on the left to start editing."
  },
  "patInput": {
    "title": "GitHub PAT Settings",
    "description": "Manage your GitHub Personal Access Token. Changes take effect immediately.",
    "label": "GitHub Personal Access Token",
    "placeholder": "Enter your GitHub PAT",
    "requiredScope": "Requires a PAT with repo scope.",
    "storageInfo": "Token is stored securely in your browser's IndexedDB.",
    "saveButton": "Validate & Save PAT",
    "savingButton": "Validating...",
    "savedAlertTitle": "Verified",
    "savedAlertDesc": "GitHub PAT verified and saved locally.",
    "modifyButton": "Modify PAT",
    "clearButton": "Clear PAT",
    "closeButton": "Close",
    "validationError": "Invalid GitHub PAT or network error. Please check PAT and connection.",
    "saveError": "Failed to save PAT locally.",
    "clearError": "Failed to clear PAT from local storage.",
    "emptyError": "PAT cannot be empty."
  },
  "fileTree": {
    "title": "File Tree",
    "loading": "Loading file tree...",
    "empty": "Repository is empty or branch content is empty.",
    "renameAction": "Rename",
    "deleteAction": "Delete",
    "saveAction": "Save",
    "versionsAction": "Version History",
    "loadVersionError": "Failed to load content for version {{sha}} of '{{fileName}}': {{error}}",
    "renameFolderNotImplemented": "(Not Implemented)",
    "deleteFolderNotImplemented": "(Not Implemented)",
    "deleteFileConfirmTitle": "Confirm Deletion",
    "deleteFileConfirmDesc": "Are you sure you want to delete file \"{{fileName}}\"? This action will modify the GitHub repository and cannot be undone.",
    "deleteButton": "Delete",
    "deletingButton": "Deleting...",
    "cancelButton": "Cancel",
    "folderInstructionTitleRename": "Folder Rename Guide",
    "folderInstructionTitleDelete": "Folder Deletion Guide",
    "folderInstructionDescRename": "Renaming folders and their contents via the API is complex. Please clone the repository locally, use the following Git commands to rename, then push the changes:",
    "folderInstructionDescDelete": "Deleting folders and their contents via the API is complex. Please clone the repository locally, use the following Git commands to delete, then push the changes:",
    "gitClone": "# 1. Clone repository (if not already cloned)",
    "gitCd": "# 2. Change directory",
    "gitCheckout": "# 3. Checkout target branch",
    "gitMv": "# 4. Rename folder (replace 'newName' with the actual new name)",
    "gitRm": "# 4. Delete folder",
    "gitCommitRename": "# 5. Commit changes",
    "gitCommitDelete": "# 5. Commit changes",
    "gitPush": "# 6. Push changes"
  },
  "createFileDialog": {
    "title": "Create New File",
    "description": "Enter the full path for the new file. Use '/' to create folders, e.g., src/components/NewFile.tsx.",
    "pathLabel": "File Path",
    "pathPlaceholder": "e.g., path/to/your/file.txt",
    "createButton": "Create File",
    "creatingButton": "Creating...",
    "cancelButton": "Cancel",
    "emptyError": "File path cannot be empty.",
    "formatError": "Invalid file path format.",
    "apiError": "Failed to create file \"{{filePath}}\": {{error}}"
  },
  "savePrompt": {
    "title": "Save Changes?",
    "description": "The file \"{{fileName}}\" has unsaved changes. Do you want to save them before opening the next file?",
    "cancelButton": "Cancel",
    "discardButton": "Discard",
    "saveButton": "Save",
    "currentFileFallback": "current file"
  },
  "versionHistory": {
    "title": "Version History for {{fileName}}",
    "description": "Select a version to view it in Excalidraw.",
    "loading": "Loading history...",
    "loadError": "Failed to load version history.",
    "noHistory": "No version history found for this file.",
    "unknownAuthor": "Unknown Author",
    "viewOnGithub": "View commit on GitHub",
    "openButton": "Open"
  }
}